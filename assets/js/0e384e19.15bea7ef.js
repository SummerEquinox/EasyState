"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{7879:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"intro","title":"Getting Started","description":"EasyState is a lightweight, type-safe state container class designed specifically for Roblox development. It provides a simple yet powerful way to manage state across your Roblox applications with several key features that make it stand out:","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/EasyState/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/SummerEquinox/EasyState/edit/master/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"defaultSidebar","next":{"title":"Basic Usage","permalink":"/EasyState/docs/basic"}}');var i=s(4848),o=s(8453);const a={sidebar_position:1},r="Getting Started",c={},l=[];function d(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,i.jsx)(t.p,{children:"EasyState is a lightweight, type-safe state container class designed specifically for Roblox development. It provides a simple yet powerful way to manage state across your Roblox applications with several key features that make it stand out:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Subscription System"}),": Built-in subscription mechanism that allows components to react to state changes efficiently"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Memory Efficient"}),": Optimized for performance with minimal overhead"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Simple API"}),": Intuitive methods like ",(0,i.jsx)(t.code,{children:"Get()"}),", ",(0,i.jsx)(t.code,{children:"Set()"}),", ",(0,i.jsx)(t.code,{children:"Subscribe()"}),", and ",(0,i.jsx)(t.code,{children:"Reset()"})," make state management straightforward"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Flexible Value Types"}),": Supports numbers, strings, booleans, and tables as state values"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Subscription Control"}),": Advanced features like ",(0,i.jsx)(t.code,{children:"SubscribeUntil()"})," and ",(0,i.jsx)(t.code,{children:"UnsubscribeUntil()"})," give you fine-grained control over state subscriptions"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"State Persistence"}),": Maintains original values and provides easy reset functionality"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Whether you're building a complex game system or a simple UI component, EasyState provides the tools you need to manage state effectively while maintaining code clarity and performance. I wanted a solution which could be applicable to many situations."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>r});var n=s(6540);const i={},o=n.createContext(i);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);