"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[139],{3172:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Examples/save","title":"Save Controller Example","description":"This example demonstrates how to create a save controller using EasyState to manage and expose data cache updates to the rest of the client code.","source":"@site/docs/Examples/save.md","sourceDirName":"Examples","slug":"/Examples/save","permalink":"/EasyState/docs/Examples/save","draft":false,"unlisted":false,"editUrl":"https://github.com/SummerEquinox/EasyState/edit/master/docs/Examples/save.md","tags":[],"version":"current","frontMatter":{},"sidebar":"defaultSidebar","previous":{"title":"UnsubscribeUntil Example","permalink":"/EasyState/docs/Examples/other"}}');var r=a(4848),o=a(8453);const s={},l="Save Controller Example",c={},d=[];function i(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"save-controller-example",children:"Save Controller Example"})}),"\n",(0,r.jsx)(t.p,{children:"This example demonstrates how to create a save controller using EasyState to manage and expose data cache updates to the rest of the client code."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",children:'-- SaveController.lua\r\nlocal ReplicatedStorage = game:GetService("ReplicatedStorage")\r\nlocal EasyState = require(ReplicatedStorage.Packages.EasyState)\r\n\r\nlocal SaveController = {}\r\n\r\n-- Create a state for the entire data cache\r\nSaveController.Data = EasyState.new({})\r\n\r\n-- Remote events for data updates\r\nlocal DataUpdateEvent = ReplicatedStorage:WaitForChild("DataUpdate")\r\nlocal KeyUpdateEvent = ReplicatedStorage:WaitForChild("KeyUpdate")\r\n\r\n-- Handle incoming data updates\r\nDataUpdateEvent.OnClientEvent:Connect(function(newData)\r\n    SaveController.Data:Set(newData)\r\nend)\r\n\r\n-- Handle single key updates\r\nKeyUpdateEvent.OnClientEvent:Connect(function(key, value)\r\n    local currentData = SaveController.Data:Get()\r\n    currentData[key] = value\r\n    SaveController.Data:Set(currentData)\r\nend)\r\n\r\nreturn SaveController\n'})}),"\n",(0,r.jsx)(t.p,{children:"Here's how other client code can use the controller:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-lua",children:'-- SomeOtherModule.lua\r\nlocal SaveController = require(path.to.SaveController)\r\n\r\n-- Subscribe to any data changes\r\nSaveController.Data:Subscribe(function(newData)\r\n    print("Data updated:", newData)\r\nend)\r\n\r\n-- Access specific data\r\nlocal currentData = SaveController.Data:Get()\r\nprint("Current coins:", currentData.coins)\r\nprint("Current level:", currentData.level)\r\nprint("Current inventory:", currentData.inventory)\n'})}),"\n",(0,r.jsx)(t.p,{children:"This controller provides a centralized way to manage and observe data changes across your client code. The entire data cache is stored in a single state, making it easy to handle both complete data updates and single key updates from the server."}),"\n",(0,r.jsx)(t.p,{children:"Other modules can require the SaveController and subscribe to the data state to react to any changes in the save data. The controller handles incoming data updates from the server and automatically updates the state with the new data."}),"\n",(0,r.jsx)(t.p,{children:"You can extend this pattern by adding methods to handle specific data types or update scenarios while maintaining the single source of truth for the data cache."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(i,{...e})}):i(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>l});var n=a(6540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);